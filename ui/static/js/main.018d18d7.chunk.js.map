{"version":3,"sources":["assets/homelessness.jpg","assets/environment.jpg","assets/diseases.jpg","App/firebase/withFirebase.js","App/components/NavItemLink.js","App/pages/Test.js","App/pages/Home.js","App/components/CharityItem.js","App/pages/DiscoverCharity.js","App/pages/Charity/index.js","App/pages/CharityForHomeless.js","App/index.js","serviceWorker.js","App/firebase/firebase.js","App/redux/reducers.js","App/redux/store.js","App/firebase/FirestoreProvider.js","index.js"],"names":["module","exports","__webpack_require__","p","compose","firestoreConnect","NavItemLink","_ref","label","to","icon","exact","react_default","a","createElement","react_router","path","_ref2","leftIcon","match","es","component","Link","active","primaryText","StyledContainer","styled","div","_templateObject","onClick","console","log","Test","flat","primary","swapTheming","Home","StyledButtonContainer","CharityItem_templateObject","CharityItem","title","subtitle","imgSrc","buttonText","className","src","alt","withRouter","history","push","Fragment","id","type","size","fullWidth","components_CharityItem","homelessness","diseases","environment","Charity_templateObject","Charity","Charity_StyledContainer","pages_DiscoverCharity","CharityForHomeless","navItems","withFirebase","react_router_dom","toolbarTitle","drawerTitle","desktopDrawerType","NavigationDrawer","DrawerTypes","FULL_HEIGHT","map","props","components_NavItemLink","Object","assign","key","DiscoverCharity","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","rootReducer","combineReducers","firebaseReducer","firestore","firestoreReducer","store","createStore","reducers","applyMiddleware","thunkMiddleware","logger","rrfProps","userProfile","useFirestoreForProfile","enableLogging","dispatch","createFirestoreInstance","FirestoreProvider","children","react_redux_es","react_redux_firebase_es","WebFontLoader","load","google","families","ReactDOM","render","firebase_FirestoreProvider","src_App","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.018d18d7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/homelessness.9818f821.jpg\";","module.exports = __webpack_public_path__ + \"static/media/environment.f62119d4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/diseases.70cea850.jpg\";","import { compose } from 'redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\n\r\nexport default compose(firestoreConnect(['tests']));\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link, Route } from 'react-router-dom';\r\nimport { FontIcon, ListItem } from 'react-md';\r\n\r\n/**\r\n * Due to the fact that react-router uses context and most of the components\r\n * in react-md use PureComponent, the matching won't work as expected since\r\n * the PureComponent will block the context updates. This is a simple wrapper\r\n * with Route to make sure that the active state is correctly applied after\r\n * an item has been clicked.\r\n */\r\nconst NavItemLink = ({ label, to, icon, exact }) => (\r\n  <Route path={to} exact={exact}>\r\n    {({ match }) => {\r\n      let leftIcon;\r\n      if (icon) {\r\n        leftIcon = <FontIcon>{icon}</FontIcon>;\r\n      }\r\n\r\n      return (\r\n        <ListItem\r\n          component={Link}\r\n          active={!!match}\r\n          to={to}\r\n          primaryText={label}\r\n          leftIcon={leftIcon}\r\n        />\r\n      );\r\n    }}\r\n  </Route>\r\n);\r\n\r\nNavItemLink.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  to: PropTypes.string,\r\n  exact: PropTypes.bool,\r\n  icon: PropTypes.node\r\n};\r\n\r\nexport default NavItemLink;\r\n","import React from 'react';\r\nimport { Button } from 'react-md';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledContainer = styled.div`\r\n  text-align: center;\r\n`;\r\nconst onClick = () => console.log('button is clicked');\r\n\r\nconst Test = () => {\r\n  return (\r\n    <StyledContainer>\r\n      <h3>Test page</h3>\r\n      <Button flat primary swapTheming onClick={onClick}>\r\n        Hello, World!\r\n      </Button>\r\n    </StyledContainer>\r\n  );\r\n};\r\n\r\nexport default Test;\r\n","import React from 'react';\r\n\r\nconst Home = () => {\r\n  return <div>Home</div>;\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Button, Card, CardTitle, Media, MediaOverlay } from 'react-md';\r\n\r\nconst StyledButtonContainer = styled.div`\r\n  margin: 5px;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n`;\r\n\r\nconst CharityItem = ({ title, subtitle, imgSrc, buttonText, onClick }) => (\r\n  <Card className=\"cards__example md-cell md-cell--6 md-cell--8-tablet\">\r\n    <Media>\r\n      <img src={imgSrc} alt=\"image\" />\r\n      <MediaOverlay>\r\n        <CardTitle title={title} subtitle={subtitle}></CardTitle>\r\n      </MediaOverlay>\r\n    </Media>\r\n    <StyledButtonContainer>\r\n      <Button flat primary swapTheming onClick={onClick}>\r\n        {buttonText}\r\n      </Button>\r\n    </StyledButtonContainer>\r\n  </Card>\r\n);\r\n\r\nexport default CharityItem;\r\n","import React from 'react';\r\nimport { FontIcon, TextField } from 'react-md';\r\nimport { withRouter } from 'react-router';\r\nimport CharityItem from '../components/CharityItem';\r\nimport homelessness from '../../assets/homelessness.jpg';\r\nimport environment from '../../assets/environment.jpg';\r\nimport diseases from '../../assets/diseases.jpg';\r\n\r\nconst findCharities = 'Find charities';\r\n\r\nconst DiscoverCharity = ({ history }) => {\r\n  const onClick = () => history.push('/charity4homeless');\r\n\r\n  return (\r\n    <>\r\n      <TextField\r\n        id=\"phone-number-with-icon-left\"\r\n        label=\"Discover charities\"\r\n        type=\"tel\"\r\n        leftIcon={<FontIcon>search</FontIcon>}\r\n        size={10}\r\n        fullWidth\r\n      />\r\n      <CharityItem\r\n        title=\"Homelessness\"\r\n        subtitle=\"homeless description\"\r\n        imgSrc={homelessness}\r\n        buttonText={findCharities}\r\n        onClick={onClick}\r\n      />\r\n      <CharityItem\r\n        title=\"Cancers and disease\"\r\n        subtitle=\"Cancers description\"\r\n        imgSrc={diseases}\r\n        buttonText={findCharities}\r\n        onClick={onClick}\r\n      />\r\n      <CharityItem\r\n        title=\"Environment\"\r\n        subtitle=\"Environment description\"\r\n        imgSrc={environment}\r\n        buttonText={findCharities}\r\n        onClick={onClick}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(DiscoverCharity);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport DiscoverCharity from '../DiscoverCharity';\r\n\r\nconst StyledContainer = styled.div`\r\n  padding: 10px;\r\n`;\r\n\r\nconst Charity = () => {\r\n  return (\r\n    <StyledContainer>\r\n      <DiscoverCharity />\r\n    </StyledContainer>\r\n  );\r\n};\r\n\r\nexport default Charity;\r\n","import React from 'react';\r\nimport CharityItem from '../components/CharityItem';\r\n\r\nconst CharityForHomeless = () => {\r\n  const onClick = () => console.log();\r\n  return (\r\n    <>\r\n      <CharityItem\r\n        title=\"Youth Without Shelter\"\r\n        subtitle=\"homeless description\"\r\n        imgSrc={''}\r\n        buttonText={'df'}\r\n        onClick={onClick}\r\n      />\r\n      <CharityItem\r\n        title=\"Youth Without Shelter\"\r\n        subtitle=\"homeless description\"\r\n        imgSrc={''}\r\n        buttonText={'df'}\r\n        onClick={onClick}\r\n      />\r\n      <CharityItem\r\n        title=\"Covenant House\"\r\n        subtitle=\"homeless description\"\r\n        imgSrc={''}\r\n        buttonText={'df'}\r\n        onClick={onClick}\r\n      />\r\n      <CharityItem\r\n        title=\"Raising the Roof\"\r\n        subtitle=\"homeless description\"\r\n        imgSrc={''}\r\n        buttonText={'df'}\r\n        onClick={onClick}\r\n      />\r\n      <CharityItem\r\n        title=\"Eva's Initiatives for Homeless Youth\"\r\n        subtitle=\"homeless description\"\r\n        imgSrc={''}\r\n        buttonText={'df'}\r\n        onClick={onClick}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CharityForHomeless;\r\n","import React from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport { NavigationDrawer } from 'react-md';\r\nimport withFirebase from './firebase/withFirebase';\r\nimport NavItemLink from './components/NavItemLink';\r\nimport Test from './pages/Test';\r\nimport Home from './pages/Home';\r\nimport Charity from './pages/Charity';\r\nimport DiscoverCharity from './pages/DiscoverCharity';\r\nimport CharityForHomeless from './pages/CharityForHomeless';\r\n\r\nconst APP_NAME = 'TD Bank';\r\n\r\nconst navItems = [\r\n  {\r\n    label: 'Home',\r\n    to: '/home',\r\n    exact: true,\r\n    icon: 'home'\r\n  },\r\n  {\r\n    label: 'My Account',\r\n    to: '/account',\r\n    exact: true,\r\n    icon: 'account_balance_wallet'\r\n  },\r\n  {\r\n    label: 'Transfers',\r\n    to: '/transfer',\r\n    exact: true,\r\n    icon: 'payment'\r\n  },\r\n  {\r\n    label: 'Investing',\r\n    to: '/invest',\r\n    exact: true,\r\n    icon: 'account_balance'\r\n  },\r\n  {\r\n    label: 'TD for Charity',\r\n    to: '/charity',\r\n    exact: true,\r\n    icon: 'layers'\r\n  }\r\n];\r\n\r\nconst App = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <NavigationDrawer\r\n        toolbarTitle={APP_NAME}\r\n        drawerTitle=\"Signed in as John Doe\"\r\n        desktopDrawerType={NavigationDrawer.DrawerTypes.FULL_HEIGHT}\r\n        navItems={navItems.map(props => (\r\n          <NavItemLink {...props} key={props.to} />\r\n        ))}\r\n      >\r\n        <Switch>\r\n          <Route exact path=\"/test\" component={Test} />\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route exact path=\"/charity\" component={Charity} />\r\n          <Route exact path=\"/discover-charity\" component={DiscoverCharity} />\r\n          <Route\r\n            exact\r\n            path=\"/charity4homeless\"\r\n            component={CharityForHomeless}\r\n          />\r\n        </Switch>\r\n      </NavigationDrawer>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default withFirebase(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: 'AIzaSyDpjwBxbwL9YKBuFoJJAJeRf-_wSC27XWw',\r\n  authDomain: 'elevate-hack-2019.firebaseapp.com',\r\n  databaseURL: 'https://elevate-hack-2019.firebaseio.com',\r\n  projectId: 'elevate-hack-2019',\r\n  storageBucket: 'elevate-hack-2019.appspot.com',\r\n  messagingSenderId: '96133345700',\r\n  appId: '1:96133345700:web:887144feb2054dcc0b5131'\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;\r\n","import { combineReducers } from 'redux';\r\nimport { firebaseReducer } from 'react-redux-firebase';\r\nimport { firestoreReducer } from 'redux-firestore';\r\n\r\nconst rootReducer = combineReducers({\r\n  firebase: firebaseReducer,\r\n  firestore: firestoreReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import { applyMiddleware, createStore } from 'redux'; //  Main Redux library\r\nimport logger from 'redux-logger';\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\nimport reducers from './reducers'; //  List of Reducers we created\r\n\r\nconst initialState = {};\r\n\r\nconst store = createStore(\r\n  reducers,\r\n  initialState,\r\n  applyMiddleware(thunkMiddleware, logger)\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { ReactReduxFirebaseProvider } from 'react-redux-firebase';\r\nimport { createFirestoreInstance } from 'redux-firestore';\r\nimport firebase from './firebase';\r\nimport store from '../redux/store';\r\n\r\n// react-redux-firebase config\r\nconst rrfConfig = {\r\n  userProfile: 'users',\r\n  useFirestoreForProfile: true, // Firestore for Profile instead of Realtime DB\r\n  enableLogging: true\r\n};\r\n\r\nconst rrfProps = {\r\n  firebase,\r\n  config: rrfConfig,\r\n  dispatch: store.dispatch,\r\n  createFirestoreInstance // <- needed if using firestore\r\n};\r\n\r\nconst FirestoreProvider = ({ children }) => (\r\n  <Provider store={store}>\r\n    <ReactReduxFirebaseProvider {...rrfProps}>\r\n      {children}\r\n    </ReactReduxFirebaseProvider>\r\n  </Provider>\r\n);\r\n\r\nexport default FirestoreProvider;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport WebFontLoader from 'webfontloader';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport FirestoreProvider from './App/firebase/FirestoreProvider';\r\n\r\nWebFontLoader.load({\r\n  google: {\r\n    families: ['Roboto:300,400,500,700', 'Material Icons']\r\n  }\r\n});\r\n\r\nReactDOM.render(\r\n  <FirestoreProvider>\r\n    <App />\r\n  </FirestoreProvider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}